SET GLOBAL log_bin_trust_function_creators = 1;
DROP DATABASE IF exists DBEXERCICIO18;
CREATE DATABASE DBEXERCICIO18;
USE DBEXERCICIO18;

CREATE TABLE CALCULADORA (
IDOPERACAO INT AUTO_INCREMENT,
NUM1 INT NOT NULL,
NUM2 INT NOT NULL,
primary key(IDOPERACAO)

);

DELIMITER $$
CREATE FUNCTION FN_ADICAO (pNUMERO_A INT, pNUMERO_B INT) RETURNS INT

BEGIN 
	DECLARE vRESULTADO INT;
    
    SET vRESULTADO = pNUMERO_A + pNUMERO_B;
    
    RETURN vRESULTADO;
    
END $$


CREATE FUNCTION FN_SUBTRACAO (pNUMERO_A INT, pNUMERO_B INT) RETURNS INT
BEGIN 
	
    DECLARE vRESULTADO INT;

	SET vRESULTADO = pNUMERO_A - pNUMERO_B;
	
    RETURN vRESULTADO;
    
END $$

CREATE FUNCTION FN_MULTIPLICAR (pNUMERO_A INT, pNUMERO_B INT) RETURNS INT
BEGIN 
	
    DECLARE vRESULTADO INT;

	SET vRESULTADO = pNUMERO_A * pNUMERO_B;
	
    RETURN vRESULTADO;
    
END $$

CREATE FUNCTION FN_DIVIDIR (pNUMERO_A INT, pNUMERO_B INT) RETURNS INT
BEGIN 
	
    DECLARE vRESULTADO INT;

	SET vRESULTADO = pNUMERO_A / pNUMERO_B;
	
    RETURN vRESULTADO;
    
END $$

CREATE FUNCTION FN_CALCULADORA (pNUMERO_A INT, pNUMERO_B INT, pOPERADOR CHAR(1)) RETURNS INT
BEGIN 
	
    DECLARE vRESULTADO NUMERIC(8,2);
    
    CASE pOPERADOR
		WHEN '+' THEN SET vRESULTADO = FN_ADICAO(pNUMERO_A, pNUMERO_B);
        WHEN '-' THEN SET vRESULTADO = FN_SUBTRACAO(pNUMERO_A, pNUMERO_B);
        WHEN '*' THEN SET vRESULTADO = FN_MULTIPLICAR(pNUMERO_A, pNUMERO_B);
        WHEN '/' THEN SET vRESULTADO = FN_DIVIDIR(pNUMERO_A, pNUMERO_B);
		ELSE SET vRESULTADO = NULL;
        
	END CASE;

	SET vRESULTADO = pNUMERO_A / pNUMERO_B;
	
    RETURN vRESULTADO;
    
END $$

DELIMITER $$
CREATE FUNCTION FN_PRIMO(N1 INT) RETURNS VARCHAR(4)
BEGIN 

 

    DECLARE RESPOSTA VARCHAR(4);
    DECLARE CONTADOR INT DEFAULT 0;
    DECLARE PRIMO INT DEFAULT 0;
    loop_teste: LOOP
        SET CONTADOR = CONTADOR + 1;
        IF (N1 mod CONTADOR = 0) then
            SET PRIMO = PRIMO + 1;
        END IF;
        IF CONTADOR = N1 THEN
            LEAVE loop_teste;
        END IF;
    END LOOP loop_teste;

 

    IF ( PRIMO = 2) THEN SET RESPOSTA = 'SIM';
    ELSE SET RESPOSTA = 'NÃO';
    END IF;
    
    RETURN RESPOSTA;
         
END $$
DELIMITER ;

 

DELIMITER $$
CREATE FUNCTION FN_IDADE(DATA_NASCIMENTO date) RETURNS INT
BEGIN 
    
    RETURN (YEAR(NOW())-YEAR(DATA_NASCIMENTO));
         
END $$
DELIMITER ;

 

DELIMITER $$
CREATE FUNCTION FN_NIVER(DATA_NASCIMENTO date) RETURNS VARCHAR(10)
BEGIN 
    
    RETURN concat(DAY(DATA_NASCIMENTO), "/", MONTH(DATA_NASCIMENTO), "/", YEAR(NOW()));
         
END $$
DELIMITER ;

 

DELIMITER $$
CREATE FUNCTION FN_EXTENSO(NUMERO INT) RETURNS VARCHAR(100)
BEGIN 
    
    DECLARE CONTADOR INT DEFAULT 0;
    DECLARE NUM VARCHAR(100);
    DECLARE RESPOSTA VARCHAR(100) DEFAULT "";
    
    loop_teste: LOOP
        SET CONTADOR = CONTADOR + 1;
        SET NUM = substring(NUMERO, CONTADOR, 1);
        IF(NUM = 1) THEN SET RESPOSTA = CONCAT(RESPOSTA, " UM");
        ELSEIF(NUM = 2) THEN SET RESPOSTA = CONCAT(RESPOSTA, " DOIS");
        ELSEIF(NUM = 3) THEN SET RESPOSTA = CONCAT(RESPOSTA, " TRÊS");
        ELSEIF(NUM = 4) THEN SET RESPOSTA = CONCAT(RESPOSTA, " QUATRO");
        ELSEIF(NUM = 5) THEN SET RESPOSTA = CONCAT(RESPOSTA, " CINCO");
        ELSEIF(NUM = 6) THEN SET RESPOSTA = CONCAT(RESPOSTA, " SEIS");
        ELSEIF(NUM = 7) THEN SET RESPOSTA = CONCAT(RESPOSTA, " SETE");
        ELSEIF(NUM = 8) THEN SET RESPOSTA = CONCAT(RESPOSTA, " OITO");
        ELSEIF(NUM = 9) THEN SET RESPOSTA = CONCAT(RESPOSTA, " NOVE");
        END IF;
        
        IF (CONTADOR = LENGTH(NUMERO)) THEN LEAVE loop_teste; 
        END IF;
        
    END LOOP loop_teste;
    
    RETURN RESPOSTA;
    
END $$


DELIMITER ;










SELECT FN_ADICAO(3, 2);
SELECT FN_SUBTRACAO(2, 3);
SELECT FN_MULTIPLICAR(3, 2);
SELECT FN_DIVIDIR(3,3);	
SELECT FN_PRIMO(5) AS PRIMO;
SELECT FN_IDADE('2003-10-10') AS IDADE;
SELECT FN_NIVER('2003-10-15') AS ANIVER;
SELECT    FN_EXTENSO(42321);

